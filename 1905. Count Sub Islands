class Solution {
    public int countSubIslands(int[][] grid1, int[][] grid2) {
        int n = grid1.length, m = grid1[0].length;

        for(int i=0; i<n; i++){
            for(int j=0; j<m; j++){
                if(grid2[i][j]==1 && grid1[i][j] == 0 ){
                    dfs(grid2, i, j);
                }
            }
        }

        int ans =0;
        for(int i=0; i<n; i++){
            for(int j=0; j<m; j++){
                if(grid2[i][j] == 1){
                    ans++;
                    dfs(grid2, i, j);
                }
            }
        }
        return ans;
    }

    private void dfs(int [][] grid, int i, int j){
        if(i<0 || j<0 || i>=grid.length || j>= grid[0].length || grid[i][j] == 0) return;
        grid[i][j] = 0;

        dfs(grid, i+1, j);
        dfs(grid, i-1, j);
        dfs(grid, i, j+1);
        dfs(grid, i, j-1);
    }
}
