/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public TreeNode invertTree(TreeNode root) {
        if(root == null) return root;

        TreeNode left = invertTree(root.left);
        TreeNode right = invertTree(root.right);

        root.left = right;
        root.right = left;
        
        return root;
    }


    // public TreeNode invertTree(TreeNode root) {
    //     if(root == null) return root;
         
    //     solve(root.left, root.right);
    //     return root;
    // }

    // public void solve(TreeNode n1, TreeNode n2){
    //     if(n1 == null || n2 == null) return;
    //     int temp = n1.val;
    //     n1.val = n2.val;
    //     n2.val = temp;

    //     solve(n1.left, n2.right);
    //     solve(n1.right, n2.left);
    // }
}
