/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public List<List<Integer>> pathSum(TreeNode root, int targetSum) {
        List<List<Integer>> ans = new ArrayList<>();
        if(root==null) return ans;
        List<Integer> lsit = new ArrayList<>();

        solve(root, targetSum, new ArrayList<>(), ans);
        return ans;
    }

    public void solve(TreeNode root, int target, List<Integer> list, List<List<Integer>> ans){
        if(root==null)return ;
        
        if(root.left==null && root.right==null && target-root.val==0){
            list.add(root.val);
            ans.add(new ArrayList<>(list));
            list.remove(list.size()-1);
            return ;
        }

        list.add(root.val);
        solve(root.left, target-root.val, list, ans);
        solve(root.right, target-root.val, list, ans);
        list.remove(list.size()-1);
    }
}
