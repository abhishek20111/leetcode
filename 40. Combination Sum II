class Solution {
    public List<List<Integer>> combinationSum2(int[] candidates, int target) {
        List<List<Integer>> list = new ArrayList<>();
        Arrays.sort(candidates);
        fun(0, candidates, list, target, new ArrayList<>());
        return list;
    }
    public void fun(int index, int[] arr, List<List<Integer>> ans, int target, List<Integer> ds){
        if(target == 0){
            ans.add(new ArrayList<Integer>(ds));
            return;
        }
        
        for(int i=index; i< arr.length; i++){
            if(i > index && arr[i] == arr[i-1]){
                continue;
            }
            if(arr[i] > target){
                break;
            }
            
            ds.add(arr[i]);
            fun(i+1, arr, ans, target-arr[i], ds);
            ds.remove(ds.size()-1);
        }
    }
}
