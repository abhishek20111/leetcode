class Solution {
    public int minReorder(int n, int[][] connections) {
        List<List<Integer>> list = new ArrayList<>();
        for(int i=0; i<n;i++)list.add(new ArrayList<Integer>());

        for(int [] c: connections){
            list.get(c[0]).add(c[1]);
            list.get(c[1]).add(-c[0]);
        }
        return doDfs(list, new boolean[n], 0);
    }

    int doDfs(List<List<Integer>> list, boolean[] vis, int root){

        int cnt = 0;
        vis[root] = true;

        for(int c: list.get(root)){
            if(!vis[Math.abs(c)]){
                cnt += doDfs(list, vis, Math.abs(c)) + ((c>0)?1:0);
            }
        }
        return cnt;
    }
}
