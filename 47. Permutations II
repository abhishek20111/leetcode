
class Solution {
    public List<List<Integer>> permuteUnique(int[] nums) {
         List<List<Integer>> ans = new ArrayList<>();
        List<Integer> list = new ArrayList<>();
        if(nums.length == 0) return ans;
        Arrays.sort(nums);
        solve(nums, ans, new ArrayList<>(), new boolean[nums.length]);
        return ans;
    }

    public void solve(int [] arr, List<List<Integer>> ans, List<Integer> list, boolean [] vis){
        if(arr.length == list.size()){
            ans.add(new ArrayList<>(list));
            return;
        }
        
        for(int i=0; i<arr.length; i++){
            // if(i>ind && arr[i] == arr[i-1]) continue;
            if(vis[i] || (i>0 && arr[i] == arr[i-1] && !vis[i-1])  ) continue;
            list.add(arr[i]);
            vis[i] = true;
            solve(arr, ans, list, vis);
            vis[i] = false;
            list.remove(list.size()-1);
        }
    }
}
