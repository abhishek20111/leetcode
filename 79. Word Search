class Solution {
    public boolean exist(char[][] board, String word) {
        for(int i=0; i<board.length; i++){
            for(int j=0; j<board[0].length; j++){
                if(board[i][j] == word.charAt(0) && dfs(board, i, j, 0, word))
                     return true;
            }
        }
        return false;
    }

    public boolean dfs(char [][] board, int i, int j, int index, String str){
        if(index == str.length()) return true;
        if(i<0 || i>board.length-1 || j<0 || j>board[0].length-1 ||
            board[i][j] != str.charAt(index)) return false;

        char temp = board[i][j];
        board[i][j] = '*';

        if(dfs(board, i-1, j, index+1, str)) return true;
        if(dfs(board, i, j-1, index+1, str)) return true;
        if(dfs(board, i, j+1, index+1, str)) return true;
        if(dfs(board, i+1, j, index+1, str)) return true;

        board[i][j] = temp;
        return false;

    }
}
