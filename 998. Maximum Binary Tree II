/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public TreeNode insertIntoMaxTree(TreeNode root, int val) {
        return solve(root, val);
    }
    private TreeNode solve(TreeNode node, int val){
        if(node == null)return new TreeNode(val);

        if(node.val<val){//if val is Bigger than the current root.val then just put it in the right of the root subtree
            TreeNode node1 = new TreeNode(val);
            node1.left = node;
            return node1;
        }

        node.right = solve(node.right, val);
        return node;
    }
}
