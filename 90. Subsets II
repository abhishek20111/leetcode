class Solution {
    public List<List<Integer>> subsetsWithDup(int[] nums) {
        Arrays.sort(nums);
        List<List<Integer>> subset = new ArrayList<>();
        List<Integer> list=new ArrayList<>();
        // HashSet<List<Integer>> an=fun(0,nums,list, subset);
        // List<List<Integer>> ans= new ArrayList<>(an);
        solve(nums, 0, subset, list);
        return subset;
    }
    
    public static void solve(int[] nums, int ind, List<List<Integer>> ans, List<Integer> list){
        if(ind == nums.length){
            if(!ans.contains(new ArrayList<>(list))) 
                ans.add(new ArrayList<>(list));
            return;
        }

        // for(int i=ind; i<=ind; i++){
            solve(nums, ind+1, ans, list);
            list.add(nums[ind]);
            solve(nums, ind+1, ans, list);
            list.remove(list.size()-1);
        // }

    }
}
