class Solution {
    public int maxSubarraySumCircular(int[] nums) {
        int n = nums.length;
        int maxSum = nums[0], minSum = nums[0], curMax = 0, curMin = 0;
        int totalsum = 0;

        for(int num: nums){
            curMax = Math.max(curMax + num, num);
            maxSum = Math.max(maxSum , curMax); //this both line give me max subarray sum
            curMin = Math.min(curMin + num, num);
            minSum = Math.min(minSum, curMin);//this both line give min subarray sum
            totalsum += num;
        }
        return maxSum>0? Math.max(maxSum, totalsum-minSum): maxSum;
        // last return statment say that if all array contain neagtive no then maxSum must be
        // negative so print as it is, but if it have some positive no then you have to check 
        // whether maxsum is greater or totalsum - minsum , as totalsum is sum of array 
        // and minsum is min continuous sum in array so if we subtract it we get maxsum or
        // total sum , after then compare it.
    }
}
